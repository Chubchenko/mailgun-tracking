version: 2.1

commands:
  cc-setup-coverage:
    description: Setup Code Climate
    parameters:
      url:
        description: Pre-built binary URL
        default: https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64
        type: string
      version:
        default: latest
        type: string
    steps:
      - restore_cache:
          key: cc-setup-<< parameters.version >>
      - run:
          name: Setup coverage
          command: |
            if [[ $(command -v cc-test-reporter) == "" ]]; then
              mkdir -p tmp/
              sudo curl -s -o ./tmp/cc-test-reporter -L << parameters.url >>
              sudo chmod +x ./tmp/cc-test-reporter
            else
              echo "Already installed."
            fi
      - save_cache:
          key: cc-setup-<< parameters.version >>
          paths:
            - ./tmp/cc-test-reporter

executors:
  default:
    description: The official CircleCI Ruby Docker image
    parameters:
      tag:
        description: The circleci/ruby Docker image version tag
        type: string
        default: latest
    docker:
      - image: circleci/ruby:<< parameters.tag >>
    environment:
      - BUNDLE_JOBS: 4
      - BUNDLE_PATH: vendor/bundle
      - BUNDLE_RETRY: 3
    working_directory: ~/mailgun-tracking

jobs:
  checkout:
    executor: default
    steps:
      - restore_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
      - checkout
      - save_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  code-climate:
    executor:
      name: default
      tag: "2.6"
    steps:
      - restore_cache:
          key: checkout-{{ .Branch }}-{{ .Revision }}
      - run:
          name: Install the current environment to the system
          command: bundle install
      - cc-setup-coverage
      - run:
          name: Run specs
          command: |
            ./tmp/cc-test-reporter
            COVERAGE=true bundle exec rake
            ./tmp/cc-test-reporter after-build --exit-code $?

workflows:
  version: 2
  default: &default
    jobs:
      - checkout
      - code-climate:
          requires:
            - checkout

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    <<: *default
